var Container=Backbone.Model.extend({sync:function(a,b,c){switch(a){case "read":c.success({container:{name:"mockContainer",objects:[{name:"mockObject",size:365}]}})}},removeObjects:function(){},parse:function(a){return void 0!=a.container?a.container:a}}),Containers=Backbone.Collection.extend({model:Container,sync:function(a,b,c){switch(a){case "read":a=new Container({name:"mockContainer",id:1,size:365,length:1}),c.success({containers:[a]})}},comparator:function(a){return a.get("id")},parse:function(a){return a.containers}});var ChangePasswordView=Backbone.View.extend({_template:_.itemplate($("#changePasswordFormTemplate").html()),events:{"click #cancelBtn":"close","click #close":"close","click #updateBtn":"update","click .modal-backdrop":"close"},initialize:function(){},onClose:function(){this.undelegateEvents();this.unbind()},render:function(){if(null==$("#change_password").html())return $(this.el).append(this._template({model:this.model})),$(".modal:last").modal(),this},close:function(){this.model.unbind("change",
this.render,this);$("#change_password").remove();$(".modal-backdrop").remove();this.onClose()},update:function(){this.model.changepassword($("input[name=instance_password]").val());(new MessagesView({el:"#content",state:"Success",title:"Password changed."})).render();this.close()}});var LoginView=Backbone.View.extend({_template:_.itemplate($("#not_logged_in").html()),initialize:function(){this.model.bind("change:loggedIn",this.onLogin,this);this.model.bind("auth-error",this.renderonerror,this);this.onLogin()},events:{"click #home_loginbtn":"onCredentialsSubmit","click .close":"onCloseErrorMsg"},onCredentialsSubmit:function(a){a.preventDefault();this.model.setCredentials(this.$("input[name=username]").val(),this.$("input[name=password]").val())},onCloseErrorMsg:function(){this.model.set({error_msg:null});
this.renderonerror()},onLogin:function(){this.model.get("loggedIn")&&(window.location.href=void 0!=this.options.next_view?"#"+this.options.next_view:"#syspanel")},render:function(){var a=this;$(this.el).fadeOut("slow",function(){$("#root").css("display","none");$(a.el).empty().html(a._template(a.model));$(a.el).fadeIn("slow")});return this},renderonerror:function(){$("#root").css("display","none");$(this.el).empty().html(this._template(this.model));return this}});var OSRouter=Backbone.Router.extend({rootView:void 0,tabs:new NavTabModels([{name:"Project",active:!1,url:"#nova"},{name:"Admin",active:!0,url:"#syspanel"}]),top:new TopBarModel({title:"Overview:",subtitle:""}),navs:new NavTabModels([]),next:void 0,loginModel:void 0,instancesModel:void 0,volumesModel:void 0,volumeSnapshotsModel:void 0,flavors:void 0,images:void 0,keypairsModel:void 0,projects:void 0,containers:void 0,vdcs:void 0,currentView:void 0,timers:[],routes:{"auth/login":"login","auth/switch/:id/":"switchTenant",
"auth/logout":"logout"},initialize:function(){this.loginModel=new LoginStatus;this.instancesModel=new Instances;this.volumesModel=new Volumes;this.volumeSnapshotsModel=new VolumeSnapshots;this.flavors=new Flavors;this.images=new Images;this.keypairsModel=new Keypairs;this.projects=new Projects;this.containers=new Containers;this.vdcs=new VDCs;Backbone.View.prototype.close=function(){this.unbind();if(this.onClose)this.onClose()};this.rootView=new RootView({model:this.loginModel,auth_el:"#auth",root_el:"#root"});
this.route("","init",this.wrap(this.init,this.checkAuth));this.route("#","init",this.wrap(this.init,this.checkAuth));this.route("syspanel","syspanel",this.wrap(this.sys_overview,this.checkAuth));this.route("syspanel/","syspanel",this.wrap(this.sys_overview,this.checkAuth));this.route("settings/","settings",this.wrap(this.showSettings,this.checkAuth));this.route("nova","nova",this.wrap(this.nova_overview,this.checkAuth));this.route("nova/","nova",this.wrap(this.nova_overview,this.checkAuth));this.route("nova/volumes/",
"volumes",this.wrap(this.nova_volumes,this.checkAuth));this.route("nova/access_and_security/","access_and_security",this.wrap(this.nova_access_and_security,this.checkAuth));this.route("nova/images/","images",this.wrap(this.nova_images,this.checkAuth));this.route("nova/snapshots/","snapshots",this.wrap(this.nova_snapshots,this.checkAuth));this.route("nova/vdcs/","vdcs",this.wrap(this.nova_vdcs,this.checkAuth));this.route("nova/vdcs/:id","vdc",this.wrap(this.nova_vdc,this.checkAuth));this.route("nova/vdcs/:id/:idservice",
"vdcservice",this.wrap(this.nova_vdc_service,this.checkAuth));this.route("nova/vdcs/:id/:idservice/:idinstance/?view=:subview","instance",this.wrap(this.nova_vdc_instance,this.checkAuth));this.route("nova/vdcs/:id/:idservice/:idinstance","instance",this.wrap(this.nova_vdc_instance,this.checkAuth));this.route("home/","home",this.wrap(this.init,this.checkAuth));this.route("syspanel/images/images/","images",this.wrap(this.sys_images,this.checkAuth));this.route("syspanel/instances/","instances",this.wrap(this.sys_instances,
this.checkAuth));this.route("syspanel/services/","services",this.wrap(this.sys_services,this.checkAuth));this.route("syspanel/flavors/","flavors",this.wrap(this.sys_flavors,this.checkAuth));this.route("syspanel/projects/","projects",this.wrap(this.sys_projects,this.checkAuth));this.route("syspanel/users/","users",this.wrap(this.sys_users,this.checkAuth));this.route("syspanel/quotas/","quotas",this.wrap(this.sys_quotas,this.checkAuth));this.route("syspanel/flavors/create","create_flavor",this.wrap(this.create_flavor,
this.checkAuth));this.route("nova/images_and_snapshots/:id/delete","delete_image",this.wrap(this.delete_image,this.checkAuth));this.route("nova/images_and_snapshots/:id/update","edit_image",this.wrap(this.edit_image,this.checkAuth));this.route("nova/images_and_snapshots/:id","consult_image",this.wrap(this.consult_image,this.checkAuth));this.route("nova/images_and_snapshots/:id/launch/","launch_image",this.wrap(this.launch_image,this.checkAuth));this.route("nova/images_and_snapshots/:name/update",
"edit_image",this.wrap(this.edit_image,this.checkAuth));this.route("nova/instances_and_volumes/instances/:id/detail?view=:subview","consult_instance",this.wrap(this.consult_instance,this.checkAuth));this.route("nova/instances_and_volumes/instances/:id/detail","consult_instance",this.wrap(this.consult_instance,this.checkAuth));this.route("nova/instances_and_volumes/volumes/:id/detail","consult_volume",this.wrap(this.consult_volume,this.checkAuth));this.route("objectstorage/containers/","consult_containers",
this.wrap(this.objectstorage_consult_containers,this.checkAuth));this.route("objectstorage/containers/:id/","consult_container",this.wrap(this.objectstorage_consult_container,this.checkAuth))},wrap:function(a,b){var c=Array.prototype.slice;return function(){var e=[a].concat(c.call(arguments,0));return b.apply(this,e)}},checkAuth:function(){var a=arguments[0];this.rootView.options.next_view=Backbone.history.fragment;if(this.loginModel.get("loggedIn")){0==this.timers.length&&(this.add_fetch(this.instancesModel,
4),this.add_fetch(this.volumesModel,4),this.add_fetch(this.images,4),this.add_fetch(this.flavors,4),this.add_fetch(this.volumeSnapshotsModel,4),this.add_fetch(this.containers,4),this.add_fetch(this.vdcs,4),this.loginModel.isAdmin()&&this.add_fetch(this.projects,4));var b=[this].concat(Array.prototype.slice.call(arguments,1));a.apply(this,b)}else window.location.href="#auth/login"},newContentView:function(a,b){void 0!=a.currentView&&a.currentView.close();a.currentView=b},init:function(a){window.location.href=
a.loginModel.isAdmin()?"#syspanel":"#nova"},login:function(){this.rootView.renderAuth()},logout:function(){this.loginModel.clearAll();window.location.href="#auth/login"},switchTenant:function(a){this.loginModel.switchTenant(a);this.navigate(this.rootView.options.next_view,{trigger:!1,replace:!0})},showSettings:function(a){a.top.set({title:"Dashboard Settings"});a.navs=new NavTabModels([{name:"User Settings",active:!0,url:"#settings/"}]);a.tabs.setActive("");a.showRoot(a,"");var b=new SettingsView({el:"#content"});
a.newContentView(a,b);b.render()},showRoot:function(a,b){a.rootView.renderRoot();(new NavTabView({el:"#navtab",model:a.tabs,loginModel:a.loginModel})).render();(new TopBarView({el:"#topbar",model:a.top,loginModel:a.loginModel})).render();var c="Project"==a.tabs.getActive();(new SideBarView({el:"#sidebar",model:a.navs,title:b,showTenants:c,loginModel:a.loginModel})).render()},showSysRoot:function(a,b){a.top.set({title:b});a.navs=new NavTabModels([{name:"Overview",active:!0,url:"#syspanel/"},{name:"Organizations",
active:!1,url:"#syspanel/projects/"},{name:"Flavors",active:!1,url:"#syspanel/flavors/"},{name:"Users",active:!1,url:"#syspanel/users/"},{name:"Quotas",active:!1,url:"#syspanel/quotas/"}]);a.navs.setActive(b);a.tabs.setActive("Admin");a.showRoot(a,"System Panel")},sys_overview:function(a){a.showSysRoot(a,"Overview");var b=new Overview,b=new SysOverviewView({model:b,el:"#content"});a.newContentView(a,b);b.render()},sys_images:function(a){a.showSysRoot(a,"Images");var b=new ImagesView({model:a.images,
el:"#content"});a.newContentView(a,b)},delete_images:function(a){(new DeleteImagesView({model:a.images,el:"body"})).render();a.navigate("#syspanel/images/images/",{trigger:!1,replace:!0})},delete_image:function(a,b){var c=new Image;c.set({id:b});(new DeleteImageView({model:c,el:"body"})).render();a.navigate("#syspanel/images/images/",{trigger:!1,replace:!0})},edit_image:function(a,b){var c=new Image;c.set({id:b});new UpdateImageView({model:c,el:"body"});a.navigate("#syspanel/images/images/",{trigger:!1,
replace:!0})},consult_image:function(a,b){a.showNovaRoot(a,"Images &amp; Snapshots");var c=new Image;c.set({id:b});c=new ConsultImageDetailView({model:c,el:"#content"});a.newContentView(a,c)},launch_image:function(a,b){var c=new Image;c.set({id:b});new LaunchImageView({model:c,flavors:a.flavors,keypairs:a.keypairsModel,el:"body"});a.navigate("#nova/images_and_snapshots/",{trigger:!1,replace:!0})},sys_instances:function(a){a.showSysRoot(a,"Instances");a.instancesModel.unbind("change");a.instancesModel.alltenants=
!0;var b=new InstanceView({model:a.instancesModel,projects:a.projects,flavors:a.flavors,el:"#content"});a.newContentView(a,b)},sys_services:function(a){a.showSysRoot(a,"Services");var b=new Services,b=new ServiceView({model:b,el:"#content"});a.newContentView(a,b);b.render()},sys_flavors:function(a){a.showSysRoot(a,"Flavors");a.flavors.unbind("change");var b=new FlavorView({model:a.flavors,el:"#content"});a.newContentView(a,b)},create_flavor:function(a){var b=new Flavor;(new CreateFlavorView({model:b,
el:"body"})).render();a.navigate("#syspanel/flavors/",{trigger:!1,replace:!0})},sys_projects:function(a){a.showSysRoot(a,"Organizations");var b=new ProjectView({model:a.projects,el:"#content"});a.newContentView(a,b)},sys_users:function(a){a.showSysRoot(a,"Users");var b=new Users,b=new UserView({model:b,el:"#content"});a.newContentView(a,b);b.render()},sys_quotas:function(a){a.showSysRoot(a,"Quotas");var b=new Quotas,b=new QuotaView({model:b,el:"#content"});a.newContentView(a,b);b.render()},showNovaRoot:function(a,
b){a.top.set({title:b});a.navs=new NavTabModels([{name:"Compute",type:"title"},{name:"Overview",active:!0,url:"#nova/"},{name:"Virtual Data Centers",active:!1,url:"#nova/vdcs/"},{name:"Images",active:!1,url:"#nova/images/"},{name:"Volumes",active:!1,url:"#nova/volumes/"},{name:"Snapshots",active:!1,url:"#nova/snapshots/"},{name:"Storage",type:"title"},{name:"Containers",active:!1,url:"#objectstorage/containers/"}]);a.navs.setActive(b);a.tabs.setActive("Project");a.showRoot(a,"Organization")},nova_overview:function(a){a.showNovaRoot(a,
"Overview");var b=new NovaOverviewView({el:"#content"});a.newContentView(a,b);b.render()},nova_access_and_security:function(a){a.showNovaRoot(a,"Access &amp; Security");var b=new AccessAndSecurityView({el:"#content",model:a.keypairsModel});a.newContentView(a,b)},nova_images:function(a){a.showNovaRoot(a,"Images");var b=new ImagesView({model:a.images,volumeSnapshotsModel:a.volumeSnapshotsModel,instancesModel:a.instancesModel,volumesModel:a.volumesModel,flavors:a.flavors,keypairs:a.keypairsModel,el:"#content"});
a.newContentView(a,b)},nova_snapshots:function(a){a.showNovaRoot(a,"Snapshots");var b=new NovaSnapshotsView({images:a.images,volumeSnapshotsModel:a.volumeSnapshotsModel,instancesModel:a.instancesModel,volumesModel:a.volumesModel,flavors:a.flavors,keypairs:a.keypairsModel,el:"#content"});a.newContentView(a,b)},nova_vdcs:function(a){a.showNovaRoot(a,"Virtual Data Centers");var b=new VDCsView({model:a.vdcs,el:"#content"});a.newContentView(a,b)},nova_vdc:function(a,b){a.showNovaRoot(a,"Virtual Data Centers");
var c=new VDCServices({vdc:b}),c=new VDCView({model:c,vdc:b,el:"#content"});a.newContentView(a,c)},nova_vdc_service:function(a,b,c){a.showNovaRoot(a,"Virtual Data Centers");c=new VDCService({id:c});b=new VDCServiceView({model:c,flavors:a.flavors,vdc:b,el:"#content"});a.newContentView(a,b)},nova_vdc_instance:function(a,b,c,e,d){a.showNovaRoot(a,"Virtual Data Centers");var g=new Instance;g.set({id:e});void 0==d&&(d="overview");b=new InstanceDetailView({model:g,subview:d,vdc:b,service:c,el:"#content"});
a.newContentView(a,b)},nova_volumes:function(a){a.showNovaRoot(a,"Volumes");a.instancesModel.alltenants=!1;var b=new NovaVolumesView({model:a.volumesModel,volumeSnapshotsModel:a.volumeSnapshotModel,flavors:a.flavors,el:"#content"});a.newContentView(a,b)},objectstorage_consult_containers:function(a){a.showNovaRoot(a,"Containers");var b=new ObjectStorageContainersView({model:a.containers,el:"#content"});a.newContentView(a,b)},objectstorage_consult_container:function(a,b){a.showNovaRoot(a,"Containers");
var c=new Container;c.set({id:b});c=new ObjectStorageContainerView({model:c,el:"#content"});a.newContentView(a,c)},consult_volume:function(a,b){a.showNovaRoot(a,"Volumes");var c=new Volume;c.set({id:b});c=new VolumeDetailView({model:c,el:"#content"});a.newContentView(a,c)},clear_fetch:function(){for(var a in this.timers)clearInterval(this.timers[a]);this.timers=[]},add_fetch:function(a,b){a.fetch();this.timers.push(setInterval(function(){a.fetch()},1E3*b))}});var Flavor=Backbone.Model.extend({sync:function(a,b,c){switch(a){case "read":JSTACK.Nova.getflavordetail(b.get("id"),c.success);break;case "delete":JSTACK.Nova.deleteflavor(b.get("id"),c.success);break;case "create":JSTACK.Nova.createflavor(b.get("name"),b.get("memory_mb"),b.get("vcpus"),b.get("disk_gb"),b.get("flavor_id"),b.get("eph_gb"),void 0,void 0,c.success)}},parse:function(a){return void 0!=a.flavor?a.flavor:a}}),Flavors=Backbone.Collection.extend({model:Flavor,sync:function(a,b,c){switch(a){case "read":JSTACK.Nova.getflavorlist(!0,
c.success)}},comparator:function(a){return a.get("id")},parse:function(a){return a.flavors}});var Image=Backbone.Model.extend({sync:function(a,b,c){switch(a){case "read":JSTACK.Nova.getimagedetail(b.get("id"),c.success);break;case "delete":JSTACK.Nova.deleteimage(b.get("id"),c.success);break;case "update":JSTACK.Nova.updateimage(b.get("id"),b.get("name"),c.success)}},parse:function(a){return void 0!=a.image?a.image:a}}),Images=Backbone.Collection.extend({model:Image,sync:function(a,b,c){switch(a){case "read":JSTACK.Nova.getimagelist(!0,c.success)}},parse:function(a){return a.images}});var Instance=Backbone.Model.extend({_action:function(a,b){var c=this;null==b&&(b={});b.success=function(a){c.trigger("sync",c,a,b);void 0!=b.callback&&b.callback(a)};return(this.sync||Backbone.sync).call(this,a,this,b)},createsnapshot:function(a){return this._action("snapshot",a)},pauseserver:function(a){return this._action("pause",a)},unpauseserver:function(a){return this._action("unpause",a)},suspendserver:function(a){return this._action("suspend",a)},resumeserver:function(a){return this._action("resume",
a)},reboot:function(a,b){b=b||{};b.soft=a;return this._action("reboot",b)},resize:function(a,b){b=b||{};b.flavor=a;return this._action("resize",b)},confirmresize:function(a){return this._action("confirm-resize",a)},revertresize:function(a){return this._action("revert-resize",a)},changepassword:function(a,b){b=b||{};b.adminPass=a;return this._action("change-password",b)},createimage:function(a){return this._action("create-image",a)},vncconsole:function(a){return this._action("get-vncconsole",a)},consoleoutput:function(a){void 0==
a&&(a={});void 0==a.length&&(a.length=35);return this._action("consoleoutput",a)},attachvolume:function(a){void 0==a&&(a={});return this._action("attachvolume",a)},detachvolume:function(a){void 0==a&&(a={});return this._action("detachvolume",a)},attachedvolumes:function(a){void 0==a&&(a={});return this._action("attachedvolumes",a)},sync:function(a,b,c){switch(a){case "create":JSTACK.Nova.createserver(b.get("name"),b.get("imageReg"),b.get("flavorReg"),b.get("key_name"),b.get("user_data"),b.get("security_groups"),
b.get("min_count"),b.get("max_count"),b.get("availability_zone"),c.success);break;case "delete":JSTACK.Nova.deleteserver(b.get("id"),c.success);break;case "update":JSTACK.Nova.updateserver(b.get("id"),b.get("name"),c.success);break;case "read":JSTACK.Nova.getserverdetail(b.get("id"),c.success);break;case "reboot":void 0!=c.soft&&c.soft?JSTACK.Nova.rebootserversoft(b.get("id"),c.success):JSTACK.Nova.rebootserverhard(b.get("id"),c.success);break;case "resize":JSTACK.Nova.resizeserver(b.get("id"),c.flavor.id,
c.success);break;case "snapshot":JSTACK.Nova.createsnapshot(b.get("id"),b.get("name"),c.success);break;case "confirm-resize":JSTACK.Nova.confirmresizedserver(b.get("id"),c.success);break;case "revert-resize":JSTACK.Nova.revertresizedserver(nmodel.get("id"),c.success);break;case "pause":JSTACK.Nova.pauseserver(b.get("id"),c.success);break;case "unpause":JSTACK.Nova.unpauseserver(b.get("id"),c.success);break;case "suspend":JSTACK.Nova.suspendserver(b.get("id"),c.success);break;case "resume":JSTACK.Nova.resumeserver(b.get("id"),
c.success);break;case "change-password":JSTACK.Nova.changepasswordserver(b.get("id"),c.adminPass,c.success);break;case "create-image":JSTACK.Nova.createimage(b.get("id"),c.success);break;case "get-vncconsole":JSTACK.Nova.getvncconsole(b.get("id"),"novnc",c.success);break;case "consoleoutput":JSTACK.Nova.getconsoleoutput(b.get("id"),c.length,c.success);break;case "attachvolume":JSTACK.Nova.attachvolume(b.get("id"),c.volume_id,c.device,c.success);break;case "detachvolume":JSTACK.Nova.detachvolume(b.get("id"),
c.volume_id,c.success);break;case "attachedvolumes":JSTACK.Nova.getattachedvolumes(b.get("id"),c.success)}},parse:function(a){return void 0!=a.server?a.server:a}}),Instances=Backbone.Collection.extend({model:Instance,sync:function(a,b,c){switch(a){case "read":JSTACK.Nova.getserverlist(!0,this.alltenants,c.success)}},parse:function(a){return a.servers}});var Keypair=Backbone.Model.extend({initialize:function(){this.id=this.get("name")},sync:function(a,b,c){switch(a){case "create":JSTACK.Nova.createkeypair(b.get("name"),b.get("public_key"),c.success);break;case "delete":JSTACK.Nova.deletekeypair(b.get("name"),c.success)}}}),Keypairs=Backbone.Collection.extend({model:Keypair,sync:function(a,b,c){switch(a){case "read":JSTACK.Nova.getkeypairlist(c.success)}},parse:function(a){var b=[],c;for(c in a.keypairs)b.push(a.keypairs[c].keypair);return b}});var LoginStatus=Backbone.Model.extend({defaults:{loggedIn:!1,username:null,password:null,error_msg:null,token:"",tenant:void 0,tenants:void 0},initialize:function(){this.bind("credentials",this.onCredentialsChange,this);this.bind("change:token",this.onTokenChange,this);this.bind("error",this.onValidateError,this);this.set({token:localStorage.getItem("token")})},onValidateError:function(a,b){a.set({error_msg:"Username and password are mandatory."});a.trigger("auth-error",b.msg)},onCredentialsChange:function(){var a=
this;""!=a.get("username")&&""!=a.get("password")?UTILS.Auth.authenticate(a.get("username"),a.get("password"),void 0,void 0,function(){console.log("Authenticated with credentials");a.setToken();a.set({username:UTILS.Auth.getName(),tenant:UTILS.Auth.getCurrentTenant()});UTILS.Auth.getTenants(function(b){a.set({tenants:b});a.set({loggedIn:!0})})},function(b){a.set({error_msg:b});a.trigger("auth-error",b)}):(a.set({error_msg:"Username and password are mandatory."}),a.trigger("auth-error","Username and password are mandatory."))},
onTokenChange:function(a,b){!UTILS.Auth.isAuthenticated()&&""!=b?UTILS.Auth.authenticate(void 0,void 0,void 0,b,function(){console.log("Authenticated with token");a.set({username:UTILS.Auth.getName(),tenant:UTILS.Auth.getCurrentTenant()});console.log("New tenant: "+a.get("name"));UTILS.Auth.getTenants(function(b){a.set({tenants:b});a.set({loggedIn:!0})})},function(b){console.log("Error authenticating with token");a.set({error_msg:b});a.trigger("auth-error",b)}):a.set({loggedIn:!1})},setToken:function(){localStorage.setItem("token",
UTILS.Auth.getToken());this.set({token:UTILS.Auth.getToken()})},isAdmin:function(){return UTILS.Auth.isAdmin()},removeToken:function(){localStorage.setItem("token","");this.set({token:""})},setCredentials:function(a,b){console.log("Setting credentials");this.set({username:a,password:b,error_msg:void 0});this.trigger("credentials",this)},switchTenant:function(a){var b=this;console.log("Tenant: "+a);UTILS.Auth.switchTenant(a,function(){b.set({username:UTILS.Auth.getName(),tenant:UTILS.Auth.getCurrentTenant()});
b.trigger("switch-tenant")})},clearAll:function(){localStorage.setItem("token","");this.set(this.defaults)}});var NavTabModel=Backbone.Model.extend({defaults:{name:void 0,active:!1,url:void 0}}),NavTabModels=Backbone.Collection.extend({model:NavTabModel,setActive:function(a){for(var b in this.models){var c=this.models[b];c.get("name")==a?c.set({active:!0}):c.set({active:!1})}this.trigger("change:actives","Changes")},getActive:function(){for(var a in this.models){var b=this.models[a];if(b.get("active"))return b.get("name")}}});var Overview=Backbone.Model.extend({sync:function(a,b,c){switch(a){case "read":JSTACK.Nova.getimagedetail(b.get("id"),c.success);break;case "downloadSummary":JSTACK.Nova.getimagedetail(b.get("id"),c.success)}}}),Overviewes=Backbone.Collection.extend({model:Overview,sync:function(a,b,c){switch(a){case "read":JSTACK.Nova.getusagesummary(!0,c.success)}},parse:function(a){return a.overview}});var Project=Backbone.Model.extend({sync:function(a,b,c){switch(a){case "read":JSTACK.Keystone.gettenants(b.get("id"),c.success);break;case "delete":JSTACK.Keystone.deletetenant(b.get("id"),c.success);break;case "create":JSTACK.Keystone.createtenant(b.get("id"),c.success);break;case "filter":JSTACK.Keystone.filtertenant(b.get("id"),c.success)}}}),Projects=Backbone.Collection.extend({model:Project,sync:function(a,b,c){switch(a){case "read":JSTACK.Keystone.gettenants(c.success)}},parse:function(a){return a.tenants}});var Quota=Backbone.Model.extend({sync:function(a,b,c){switch(a){case "read":JSTACK.Nova.getimagedetail(b.get("id"),c.success);break;case "filter":JSTACK.Nova.deleteimage(b.get("id"),c.success)}}}),Quotas=Backbone.Collection.extend({model:Quota,sync:function(a,b,c){switch(a){case "read":JSTACK.Nova.getusagesummary(!0,c.success)}},parse:function(a){return a.quota}});var Service=Backbone.Model.extend({sync:function(a,b,c){switch(a){case "read":JSTACK.Keystone.getservice(b.get("id"),c.success);break;case "filter":JSTACK.Keystone.filterservice(b.get("id"),c.success)}}}),Services=Backbone.Collection.extend({model:Service,sync:function(a,b,c){switch(a){case "read":a=JSTACK.Keystone.getservicelist(),c.success(a)}},parse:function(a){return a}});var TopBarModel=Backbone.Model.extend({});var User=Backbone.Model.extend({sync:function(a,b,c){switch(a){case "read":JSTACK.Keystone.getuser(b.get("id"),c.success);break;case "delete":JSTACK.Keystone.deleteuser(b.get("id"),c.success);break;case "create":JSTACK.Keystone.createuser(b.get("id"),c.success);break;case "filter":JSTACK.Keystone.filteruser(b.get("id"),c.success);break;case "edit":JSTACK.Keystone.edituser(b.get("id"),c.success)}}}),Users=Backbone.Collection.extend({model:User,sync:function(a,b,c){switch(a){case "read":JSTACK.Keystone.getusers(!0,
c.success)}},parse:function(a){return a.users}});var VDC=Backbone.Model.extend({sync:function(a,b,c){switch(a){case "read":c.success({vdc:{id:"mockVDC",name:"mockVDC",vcpus:1,disk:10,ram:1,vcpu_hours:1,disk_hours:1}})}},parse:function(a){return void 0!=a.vdc?a.vdc:a}}),VDCs=Backbone.Collection.extend({model:VDC,sync:function(a,b,c){switch(a){case "read":a=new VDC({id:"mockVDC",name:"mockVDC",vcpus:1,disk:10,ram:1,vcpu_hours:1,disk_hours:1}),c.success({vdcs:[a]})}},comparator:function(a){return a.get("id")},parse:function(a){return a.vdcs}});
